name: Deploy Nettest Server

on:
  push:
    branches: [ main, static-assets, test ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Deploy to Debian Server
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: 172.105.0.231
        username: root
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        debug: false
        script: |
          echo "Deploying Nettest Server..."
          
          NETTEST_URL="https://github.com/specure/nettest/releases/download/latest-debian-11/nettest-debian-11-x86_64.tar.gz"
          NEW_BUILD_DIR="/tmp/nettest-new"
          OLD_BUILD_DIR="/tmp/nettest-old"
          CURRENT_BUILD_DIR="/opt/nettest"
          
          mkdir -p $NEW_BUILD_DIR $OLD_BUILD_DIR
          cd $NEW_BUILD_DIR
          
          echo "Downloading build..."
          wget -q --timeout=30 --tries=3 "$NETTEST_URL" -O nettest.tar.gz
          
          if [ $? -eq 0 ] && [ -f nettest.tar.gz ]; then
            FILE_SIZE=$(stat -c%s nettest.tar.gz 2>/dev/null || echo 0)
            if [ $FILE_SIZE -gt 1048576 ]; then
              echo "Download successful ($(($FILE_SIZE / 1024 / 1024))MB)"
            else
              echo "Download failed - file too small"
              exit 1
            fi
          else
            echo "Download failed"
            exit 1
          fi
          
          echo "Extracting build..."
          tar -tzf nettest.tar.gz > /dev/null 2>&1
          if [ $? -ne 0 ]; then
            echo "Invalid archive"
            exit 1
          fi
          
          tar -xzf nettest.tar.gz
          
          if [ ! -f nettest ]; then
            echo "Extraction failed"
            exit 1
          fi
          
          chmod +x nettest
          
          echo "Stopping existing process..."
          # Находим все процессы nettest
          NETTEST_PIDS=$(pgrep -f "nettest -s")
          
          if [ ! -z "$NETTEST_PIDS" ]; then
            echo "Found nettest processes: $NETTEST_PIDS"
            
            # Сначала пытаемся мягко остановить все процессы
            for pid in $NETTEST_PIDS; do
              echo "Sending TERM to PID: $pid"
              kill -TERM $pid 2>/dev/null || true
            done
            
            sleep 2
            
            # Проверяем, какие процессы еще живы
            REMAINING_PIDS=$(pgrep -f "nettest -s")
            if [ ! -z "$REMAINING_PIDS" ]; then
              echo "Some processes still running: $REMAINING_PIDS"
              echo "Force killing remaining processes..."
              
              for pid in $REMAINING_PIDS; do
                echo "Sending KILL to PID: $pid"
                kill -KILL $pid 2>/dev/null || true
              done
              
              sleep 2
            fi
            
            # Финальная проверка
            FINAL_PIDS=$(pgrep -f "nettest -s")
            if [ ! -z "$FINAL_PIDS" ]; then
              echo "Failed to stop processes: $FINAL_PIDS"
              echo "Attempting to kill with pkill..."
              pkill -9 -f "nettest -s" || true
              sleep 1
              
              if pgrep -f "nettest -s" > /dev/null; then
                echo "Still cannot stop processes"
                exit 1
              fi
            fi
            
            echo "All nettest processes stopped successfully"
          else
            echo "No existing nettest processes found"
          fi
          
          # Проверяем, что порт 5005 свободен
          echo "Checking if port 5005 is free..."
          if netstat -tuln 2>/dev/null | grep :5005 > /dev/null; then
            echo "Warning: Port 5005 is still in use"
            sleep 2
          else
            echo "Port 5005 is free"
          fi
          
          if [ -d "$CURRENT_BUILD_DIR" ]; then
            echo "Backing up old build..."
            mv $CURRENT_BUILD_DIR $OLD_BUILD_DIR
          fi
          
          echo "Installing new build..."
          mkdir -p $CURRENT_BUILD_DIR
          cp nettest $CURRENT_BUILD_DIR/
          cd $CURRENT_BUILD_DIR
          
          echo "Starting server..."
          nohup ./nettest -s > nettest.log 2>&1 &
          NEW_PID=$!
          
          echo "Waiting for server (PID: $NEW_PID)..."
          
          # Ждем дольше для запуска
          for i in {1..15}; do
            if ps -p $NEW_PID > /dev/null; then
              echo "Server started successfully"
              break
            fi
            sleep 1
          done
          
          if ps -p $NEW_PID > /dev/null; then
            echo "New server running (PID: $NEW_PID)"
            
            # Ждем еще немного для полного запуска
            sleep 5
            
            # Проверяем порт более надежно
            PORT_CHECK_COUNT=0
            for i in {1..10}; do
              if netstat -tuln 2>/dev/null | grep :5005 > /dev/null; then
                echo "Port 5005 listening (attempt $i)"
                PORT_CHECK_COUNT=1
                break
              elif ss -tuln 2>/dev/null | grep :5005 > /dev/null; then
                echo "Port 5005 listening (ss check, attempt $i)"
                PORT_CHECK_COUNT=1
                break
              else
                echo "Port 5005 not listening yet (attempt $i)"
                sleep 1
              fi
            done
            
            if [ $PORT_CHECK_COUNT -eq 0 ]; then
              echo "Warning: Port 5005 not listening after 10 attempts"
            fi
            
            if [ -d "$OLD_BUILD_DIR" ]; then
              echo "Removing old build..."
              rm -rf $OLD_BUILD_DIR
            fi
            
            rm -rf $NEW_BUILD_DIR
            
            echo "Deployment completed successfully!"
            
          else
            echo "Server failed to start"
            echo "Checking logs:"
            cat $CURRENT_BUILD_DIR/nettest.log || echo "No logs"
            
            echo "Removing failed build..."
            rm -rf $CURRENT_BUILD_DIR $NEW_BUILD_DIR
            
            if [ -d "$OLD_BUILD_DIR" ]; then
              echo "Restoring old build..."
              mv $OLD_BUILD_DIR $CURRENT_BUILD_DIR
              
              cd $CURRENT_BUILD_DIR
              nohup ./nettest -s > nettest.log 2>&1 &
              OLD_PID=$!
              
              sleep 5
              if ps -p $OLD_PID > /dev/null; then
                echo "Old server restored (PID: $OLD_PID)"
              else
                echo "Failed to restore old server"
                exit 1
              fi
            else
              echo "No old build to restore"
              exit 1
            fi
          fi
          
          echo "Final status:"
          ps aux | grep "nettest -s" | grep -v grep || echo "No nettest processes"
          netstat -tuln | grep :5005 || echo "Port 5005 not listening" 